{
  "openapi": "3.0.0",
  "info": {
    "description": "Bookme app - by Vishal Dogra",
    "version": "1.0.0",
    "title": "Bookme",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "User Operations",
      "description": "APIs for requesting and return user requests"
    }, {
      "name": "Book Request",
      "description": "Example API for requesting and return book requests"
    }
  ],
  "paths": {
    "/user/register": {
      "get": {
        "tags": [
          "User Operations"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Returns all active users",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/singleUserRequest"
            }
          }
        }
      },
      "post": {
        "tags": [
          "User Operations"
        ],
        "summary": "Registers a new user.",
        "parameters": [{
          "in": "body",
          "name": "body",
          "required": true,
          "description": "User Registeration Request Body",
          "schema": {
            "type": "object",
            "$ref": "#/components/schemas/userRegisterationRequestBody"
          }
        }],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/individualUserDetailsResponseBody"
            }
          },
          "400": {
            "description": "Bad Request. Please check the details passed in your Request Body."
          }
        }
      }
    },
    "/request/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the cat that we want to match",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Book Request"
        ],
        "summary": "Get book request with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Book Request id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/bookRequest"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. Book request not found."
          }
        }
      },
      "put": {
        "summary": "edit a book request by ID",
        "tags": [
          "Book Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Book Request id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "description": "Book Request Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bookRequest"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/bookRequest"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "summary": "Delete Book Request by ID",
        "tags": [
          "Book Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Book Request Id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. Book Request not found."
          }
        }
      }
    }
  },
"components": {
    "schemas": {
      "userRegisterationRequestBody": {
        "properties": {
          "uuid": {
            "type": "string"
          }
        }
      },
      "userLoginRequestBody":{

      },
      "userDetailsUpdateRequestBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "format": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "userEmailUpdateRequestBody": {
        "type": "object",
        "properties": {
            "oldEmail": {
              "type": "string",
              "format": "email"
            },
            "newEmail": {
              "type": "string",
              "format": "email"
            }
        }
      },
      "userPasswordUpdateRequestBody": {
        "type": "object",
        "properties": {
            "oldPassword": {
              "type": "string",
              "format": "string"
            },
            "newPassword": {
              "type": "string",
              "format": "string"
            }
        }
      },
      "userNameUpdateRequestBody": {
        "type": "object",
        "properties": {
            "oldUsername": {
              "type": "string",
              "format": "string"
            },
            "newUsername": {
              "type": "string",
              "format": "string"
            }
        }
      },
      "individualUserDetailsResponseBody": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "string"
          },
          "first_name": {
            "type": "string",
            "format": "string"
          },
          "last_name": {
            "type": "string",
            "format": "string"
          },
          "phone_number": {
            "type": "string",
            "format": "number"
          },
          "date_of_birth": {
            "type": "string",
            "format": "timestamp"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "username": {
            "type": "string",
            "format": "string"
          },
          "created_at": {
            "type": "string",
            "format": "timestamp"
          },
          "is_active": {
            "type": "boolean",
            "format": "boolean"
          }
        }
      },
      "allUserDetailsResponseBody": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
            "$ref": "#/components/schemas/individualUserDetailsResponseBody"
            }
          }
        }
      }
    },
    "securitySchemes": {
    "Bearer Authorization": { 
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
      } 
    },
  }
}
